{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/pages/profile/Home/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts, showDetails } from '../../../actions/postActions';\nimport PropTypes from 'prop-types';\nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader';\nimport Comment from '../../../components/comment/profile';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this));\n    _this.state = {\n      // posts: [],\n      sideNavToggle: false,\n      selectedThumbnail: _this.selectedThumbnail,\n      selectedDescription: _this.selectedDescription,\n      commentsMessage: _this.commentsMessage,\n      selectedComment: 0,\n      newComment: '' // selectedThumbnail: this.selectedThumbnail,\n      // selectedDescription: this.selectedDescription,\n      // selectedComment: 0,\n      // this.state.selectedThumbnail = this.state.Data[0].thumbnail;\n      // this.state.selectedDescription = this.state.Data[0].description;\n      // this.handleCommentSubmitChange = this.handleCommentSubmitChange.bind(this);\n      // this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"handleCommentSubmitChange\",\n    value: function handleCommentSubmitChange(event) {\n      this.setState({\n        newComment: event.target.value\n      });\n    }\n  }, {\n    key: \"handleCommentSubmit\",\n    value: function handleCommentSubmit(event) {\n      var newComment = this.state.newComment;\n      alert('A name was submitted: ' + this.state.newComment);\n      event.preventDefault();\n      this.state.Data.push({\n        id: 3,\n        avatar: '100008343750912',\n        comment: newComment\n      });\n    }\n  }, {\n    key: \"DeletePost\",\n    value: function DeletePost(posts) {\n      console.log(this.state.Data);\n      var Post = Object.assign([], this.state.Data);\n      Post.splice(posts, 1);\n      this.setState({\n        Data: Post,\n        selectedThumbnail: this.state.Data[0].thumbnail,\n        selectedDescription: this.state.Data[0].description,\n        selectedComment: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var PostFeed = this.props.posts.map(function (item) {\n        return React.createElement(PostItem, {\n          deletePost: _this2.DeletePost.bind(_this2, item),\n          liked: item.liked,\n          key: item.id,\n          name: item.name,\n          avatar: item.avatar,\n          thumbnail: item.thumbnail,\n          gallery: item.gallery,\n          showDetails: function showDetails() {\n            return _this2.props.showDetails(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      });\n      var myComments = this.props.post.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, item.description) // <Comment  \n        // key={item.comment.id}  \n        // avatar={item.comment.avatar} \n        // comment={item.comment.comment} />\n        ;\n      });\n      return React.createElement(\"div\", {\n        className: \"Wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_2Col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(TreeItem, {\n        img: \"100008343750912\",\n        name: \"Adam Donatelli (ME)\",\n        location: \"St. Petersburg\",\n        bornYear: \"1983\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(LeftNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(InfoCard, {\n        location: \"St. Petersburg\",\n        age: \"35\",\n        education: \"University of Arizona\",\n        bornIn: \"Hobbs,NM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Column2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeaderWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Pageheader, {\n        text: \"Adam Donatelli\",\n        icon: \"person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Grid_2Col_Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spacebetween\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        title: \"Add a post\",\n        className: \"btn-floating btn-small waves-effect waves-light grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"add\")))), PostFeed), React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(TargetDetails, {\n        thumbnail: this.props.post.thumbnail,\n        description: this.props.post.description // handleCommentSubmit = {this.handleCommentSubmit}\n        ,\n        newComment: this.props.post.newComment // handleCommentSubmitChange = {this.handleCommentSubmitChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.props.post.description)))))));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nProfile.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  post: PropTypes.array.isRequired //  showDetails: PropTypes.func.isRequired\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items,\n    // showDetails: state.posts.item,\n    post: state.posts.item // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts,\n  showDetails: showDetails\n})(Profile);","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/pages/profile/Home/index.js"],"names":["React","connect","fetchPosts","showDetails","PropTypes","LeftNav","InfoCard","TreeItem","PostItem","TargetDetails","Pageheader","Comment","Profile","state","sideNavToggle","selectedThumbnail","selectedDescription","commentsMessage","selectedComment","newComment","props","event","setState","target","value","alert","preventDefault","Data","push","id","avatar","comment","posts","console","log","Post","Object","assign","splice","thumbnail","description","PostFeed","map","item","DeletePost","bind","liked","name","gallery","myComments","post","Component","propTypes","func","isRequired","array","mapStateToProps","items"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,8BAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;IAEMC,O;;;;;AACF,qBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,aAAa,EAAE,KAFN;AAGTC,MAAAA,iBAAiB,EAAE,MAAKA,iBAHf;AAITC,MAAAA,mBAAmB,EAAE,MAAKA,mBAJjB;AAKTC,MAAAA,eAAe,EAAE,MAAKA,eALb;AAOTC,MAAAA,eAAe,EAAE,CAPR;AAQTC,MAAAA,UAAU,EAAE,EARH,CAST;AACA;AACA;AAEJ;AACA;AACA;AACA;;AAhBa,KAAb;AAFU;AAmBb;;;;yCAGoB;AACjB,WAAKC,KAAL,CAAWlB,UAAX;AACH;;;8CAMyBmB,K,EAAO;AAC7B,WAAKC,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA1B,OAAd;AACC;;;wCAEeH,K,EAAO;AAAA,UAChBF,UADgB,GACF,KAAKN,KADH,CAChBM,UADgB;AAGnBM,MAAAA,KAAK,CAAC,2BAA2B,KAAKZ,KAAL,CAAWM,UAAvC,CAAL;AACAE,MAAAA,KAAK,CAACK,cAAN;AAEA,WAAKb,KAAL,CAAWc,IAAX,CAAgBC,IAAhB,CAAqB;AACjBC,QAAAA,EAAE,EAAE,CADa;AAEjBC,QAAAA,MAAM,EAAE,iBAFS;AAGjBC,QAAAA,OAAO,EAAEZ;AAHQ,OAArB;AAKP;;;+BAGUa,K,EAAO;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWc,IAAvB;AAEA,UAAMQ,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxB,KAAL,CAAWc,IAA7B,CAAb;AACAQ,MAAAA,IAAI,CAACG,MAAL,CAAYN,KAAZ,EAAmB,CAAnB;AACA,WAAKV,QAAL,CAAc;AACVK,QAAAA,IAAI,EAAGQ,IADG;AAEVpB,QAAAA,iBAAiB,EAAE,KAAKF,KAAL,CAAWc,IAAX,CAAgB,CAAhB,EAAmBY,SAF5B;AAGVvB,QAAAA,mBAAmB,EAAE,KAAKH,KAAL,CAAWc,IAAX,CAAgB,CAAhB,EAAmBa,WAH9B;AAIVtB,QAAAA,eAAe,EAAE;AAJP,OAAd;AASH;;;6BAEY;AAAA;;AAKT,UAAMuB,QAAQ,GAAG,KAAKrB,KAAL,CAAWY,KAAX,CAAiBU,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACtC,oBAAC,QAAD;AAAU,UAAA,UAAU,EAAE,MAAI,CAACC,UAAL,CAAgBC,IAAhB,CAAqB,MAArB,EAA2BF,IAA3B,CAAtB;AAAwD,UAAA,KAAK,EAAEA,IAAI,CAACG,KAApE;AAA2E,UAAA,GAAG,EAAEH,IAAI,CAACd,EAArF;AAAyF,UAAA,IAAI,EAAEc,IAAI,CAACI,IAApG;AAA0G,UAAA,MAAM,EAAEJ,IAAI,CAACb,MAAvH;AAA+H,UAAA,SAAS,EAAEa,IAAI,CAACJ,SAA/I;AAA0J,UAAA,OAAO,EAAEI,IAAI,CAACK,OAAxK;AAAiL,UAAA,WAAW,EAAE;AAAA,mBAAM,MAAI,CAAC5B,KAAL,CAAWjB,WAAX,CAAuBwC,IAAvB,CAAN;AAAA,WAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsC;AAAA,OAAzB,CAAjB;AAKA,UAAMM,UAAU,GAAG,KAAK7B,KAAL,CAAW8B,IAAX,CAAgBR,GAAhB,CAAoB,UAAAC,IAAI;AAAA,eACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,IAAI,CAACH,WADV,CADuC,CAIvC;AACA;AACA;AACA;AAPuC;AAAA,OAAxB,CAAnB;AAgBF,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAC,iBAAd;AAAgC,QAAA,IAAI,EAAC,qBAArC;AAA2D,QAAA,QAAQ,EAAC,gBAApE;AAAqF,QAAA,QAAQ,EAAC,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,gBAAnB;AAAoC,QAAA,GAAG,EAAC,IAAxC;AAA6C,QAAA,SAAS,EAAC,uBAAvD;AAA+E,QAAA,MAAM,EAAC,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,EAOI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,gBAAjB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADR,EAKQ;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,sDAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CADJ,CAHJ,CADJ,EAUKC,QAVL,CADJ,EAeI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,aAAD;AACA,QAAA,SAAS,EAAE,KAAKrB,KAAL,CAAW8B,IAAX,CAAgBX,SAD3B;AAEA,QAAA,WAAW,EAAE,KAAKnB,KAAL,CAAW8B,IAAX,CAAgBV,WAF7B,CAGA;AAHA;AAIA,QAAA,UAAU,EAAI,KAAKpB,KAAL,CAAW8B,IAAX,CAAgB/B,UAJ9B,CAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAYG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAW8B,IAAX,CAAgBV,WAArB,CAZH,CAfJ,CALR,CAPJ,CADJ,CAFA,CADF;AAsDD;;;;EAjJiBxC,KAAK,CAACmD,S;;AAoJ5BvC,OAAO,CAACwC,SAAR,GAAoB;AAChBlD,EAAAA,UAAU,EAAEE,SAAS,CAACiD,IAAV,CAAeC,UADX;AAEhBtB,EAAAA,KAAK,EAAE5B,SAAS,CAACmD,KAAV,CAAgBD,UAFP;AAGhBJ,EAAAA,IAAI,EAAE9C,SAAS,CAACmD,KAAV,CAAgBD,UAHN,CAIhB;;AAJgB,CAApB;;AAOA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAA3C,KAAK;AAAA,SAAK;AAC9BmB,IAAAA,KAAK,EAAEnB,KAAK,CAACmB,KAAN,CAAYyB,KADW;AAE9B;AACAP,IAAAA,IAAI,EAAErC,KAAK,CAACmB,KAAN,CAAYW,IAHY,CAI9B;AACA;;AAL8B,GAAL;AAAA,CAA7B;;AAQA,eAAe1C,OAAO,CAACuD,eAAD,EAAkB;AAACtD,EAAAA,UAAU,EAAVA,UAAD;AAAaC,EAAAA,WAAW,EAAXA;AAAb,CAAlB,CAAP,CAAoDS,OAApD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts, showDetails } from '../../../actions/postActions';\nimport PropTypes from 'prop-types'; \nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\n\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader'; \nimport Comment from '../../../components/comment/profile';\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            // posts: [],\n            sideNavToggle: false,\n            selectedThumbnail: this.selectedThumbnail,\n            selectedDescription: this.selectedDescription,\n            commentsMessage: this.commentsMessage,\n\n            selectedComment: 0,\n            newComment: '',\n            // selectedThumbnail: this.selectedThumbnail,\n            // selectedDescription: this.selectedDescription,\n            // selectedComment: 0,\n        }\n        // this.state.selectedThumbnail = this.state.Data[0].thumbnail;\n        // this.state.selectedDescription = this.state.Data[0].description;\n        // this.handleCommentSubmitChange = this.handleCommentSubmitChange.bind(this);\n        // this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n    }\n\n    \n    componentWillMount() {\n        this.props.fetchPosts();\n    }\n\n\n  \n    \n\n    handleCommentSubmitChange(event) {\n        this.setState({newComment: event.target.value});\n        }\n    \n    handleCommentSubmit(event) {\n        const {newComment} = this.state;\n\n            alert('A name was submitted: ' + this.state.newComment);\n            event.preventDefault();\n\n            this.state.Data.push({\n                id: 3,\n                avatar: '100008343750912',\n                comment: newComment,\n            })\n    }  \n\n    \n    DeletePost(posts) {\n        console.log(this.state.Data);\n\n        const Post = Object.assign([], this.state.Data);\n        Post.splice(posts, 1)\n        this.setState({\n            Data : Post,\n            selectedThumbnail: this.state.Data[0].thumbnail,\n            selectedDescription: this.state.Data[0].description,\n            selectedComment: 0,\n           \n        })\n\n\n    }\n\n        render() {\n\n         \n\n\n        const PostFeed = this.props.posts.map(item => (\n            <PostItem deletePost={this.DeletePost.bind(this, item)} liked={item.liked} key={item.id} name={item.name} avatar={item.avatar} thumbnail={item.thumbnail} gallery={item.gallery} showDetails={() => this.props.showDetails(item)} />\n        ));\n\n\n        const myComments = this.props.post.map(item => (\n            <div>\n                {item.description}\n            </div>\n            // <Comment  \n            // key={item.comment.id}  \n            // avatar={item.comment.avatar} \n            // comment={item.comment.comment} />\n        ));\n\n\n       \n       \n        \n\n\n      return (\n        <div className=\"Wrapper\"> \n\n        <div className=\"Grid_wrapper\">\n            <div className=\"Grid_2Col\">\n                <div className=\"Column1\">\n                    <TreeItem img=\"100008343750912\" name=\"Adam Donatelli (ME)\" location=\"St. Petersburg\" bornYear=\"1983\"/>\n                    <LeftNav/>\n                    <InfoCard location='St. Petersburg' age='35' education='University of Arizona' bornIn=\"Hobbs,NM\" />\n                </div>\n\n                <div className=\"Column2\"> \n                        <div className=\"HeaderWrapper\"> \n                            <Pageheader text=\"Adam Donatelli\" icon=\"person\" />\n                        </div>\n\n                        <div className=\"Grid_2Col_Container\"> \n                            <div className=\"Column\">\n                                <div className=\"spacebetween\">\n                                    <div>\n                                    </div>\n                                    <div>\n                                        <a title=\"Add a post\" className=\"btn-floating btn-small waves-effect waves-light grey\">\n                                        <i className=\"material-icons\">add</i>\n                                        </a>\n                                    </div>\n                                </div>\n                                {PostFeed}\n\n                            </div>\n\n                            <div className=\"Column\">\n\n                                {/* {this.ShowDetails()} */}\n\n                                <TargetDetails \n                                thumbnail={this.props.post.thumbnail} \n                                description={this.props.post.description} \n                                // handleCommentSubmit = {this.handleCommentSubmit}\n                                newComment = {this.props.post.newComment}\n                                // handleCommentSubmitChange = {this.handleCommentSubmitChange}\n                                />\n                                \n                               <h1>{this.props.post.description}</h1>\n                      \n\n                            </div>\n                        </div> \n                    </div> \n\n                </div>\n            </div>\n    </div>\n        );\n    }\n}\n\nProfile.propTypes = {\n    fetchPosts: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired,\n    post: PropTypes.array.isRequired\n    //  showDetails: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts.items,\n    // showDetails: state.posts.item,\n    post: state.posts.item,\n    // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n})\n\nexport default connect(mapStateToProps, {fetchPosts, showDetails})(Profile)\n"]},"metadata":{},"sourceType":"module"}