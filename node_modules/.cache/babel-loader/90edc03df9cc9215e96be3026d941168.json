{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/components/TargetDetails/menu_dropdown.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ListItemIcon from '@material-ui/core/Menu';\n\nvar Menu_dropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Menu_dropdown, _React$Component);\n\n  function Menu_dropdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu_dropdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu_dropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null // selectedIndex: 0,\n\n    };\n\n    _this.handleClickListItem = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleMenuItemClick = function (event, index) {\n      _this.setState({\n        selectedIndex: index,\n        anchorEl: null\n      });\n\n      if (index == 1) {\n        console.log(\"this is the firt one\");\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu_dropdown, [{\n    key: \"render\",\n    value: function render() {\n      var anchorEl = this.state.anchorEl;\n      var _this$props = this.props,\n          Delete = _this$props.Delete,\n          classes = _this$props.classes;\n\n      var styles = function styles(theme) {\n        return {\n          menuItem: {\n            '&:focus': {\n              backgroundColor: theme.palette.primary.main,\n              '& $primary, & $icon': {\n                color: theme.palette.common.white\n              }\n            }\n          },\n          primary: {},\n          icon: {}\n        };\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"lock-menu\",\n        onClick: this.handleClickListItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"more_horiz\"))), React.createElement(Menu, {\n        id: \"lock-menu\",\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        selected: 0 === this.state.selectedIndex,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"redo\")), \"Share\"), React.createElement(MenuItem, {\n        selected: 1 === this.state.selectedIndex,\n        onClick: Delete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Delete \"))));\n    }\n  }]);\n\n  return Menu_dropdown;\n}(React.Component);\n\nMenu_dropdown.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default Menu_dropdown;","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/components/TargetDetails/menu_dropdown.js"],"names":["React","classnames","PropTypes","Link","List","MenuItem","Menu","ListItemIcon","Menu_dropdown","state","anchorEl","handleClickListItem","event","setState","currentTarget","handleMenuItemClick","index","selectedIndex","console","log","handleClose","props","Delete","classes","styles","theme","menuItem","backgroundColor","palette","primary","main","color","common","white","icon","Boolean","Component","propTypes","name","string","isRequired","value","info","error","onChange","func","options","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ListItemIcon from '@material-ui/core/Menu';\n\n\n\n\nclass Menu_dropdown extends React.Component {\n\n// const Menu_dropdown = ({ name, value, error, info, onChange, options }) => {\n    \n   \n    state = {\n        anchorEl: null,\n        // selectedIndex: 0,\n      };\n    \n      handleClickListItem = event => {\n        this.setState({ anchorEl: event.currentTarget });\n      };\n    \n      handleMenuItemClick = (event, index) => {\n        this.setState({ selectedIndex: index, anchorEl: null });\n\n        if(index == 1) {\n            console.log(\"this is the firt one\");\n        }\n      };\n    \n      handleClose = () => {\n        this.setState({ anchorEl: null });\n\n      };\n\n      \n\n        render() {\n            const { anchorEl } = this.state;\n            const { Delete, classes } = this.props;\n\n            const styles = theme => ({\n                menuItem: {\n                  '&:focus': {\n                    backgroundColor: theme.palette.primary.main,\n                    '& $primary, & $icon': {\n                      color: theme.palette.common.white,\n                    },\n                  },\n                },\n                primary: {},\n                icon: {},\n              });\n        return (\n        <div> \n            <div> \n                <List>\n                    <a  aria-haspopup=\"true\" aria-controls=\"lock-menu\" onClick={this.handleClickListItem}>\n                    <i className=\"material-icons\">more_horiz</i></a>\n                </List>\n\n        <Menu  id=\"lock-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n            <MenuItem  selected={0 === this.state.selectedIndex} onClick={this.handleClose}> \n            <ListItemIcon className={classes.icon}>\n            <i className=\"material-icons\">redo</i>\n          </ListItemIcon>\n            Share  \n            </MenuItem>\n            <MenuItem  selected={1 === this.state.selectedIndex} onClick={Delete} > Delete </MenuItem>\n        </Menu>\n            </div>\n        </div>\n    );\n  }\n}\n\n\n  Menu_dropdown.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n  };\n  \n  export default Menu_dropdown;"]},"metadata":{},"sourceType":"module"}