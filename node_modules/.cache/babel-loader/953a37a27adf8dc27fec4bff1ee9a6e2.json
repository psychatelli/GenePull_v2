{"ast":null,"code":"import _defineProperty from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/pages/profile/Home/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../../../actions/postActions';\nimport PropTypes from 'prop-types';\nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\nimport InfoCardSkills from '../../../components/Infocard/skills';\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader';\nimport Comment from '../../../components/comment/profile';\nimport EditableInput from '../../../components/common/editableInput';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this));\n    _this.state = _defineProperty({\n      posts: [],\n      sideNavToggle: false,\n      selectedThumbnail: _this.selectedThumbnail,\n      selectedDescription: _this.selectedDescription,\n      commentsMessage: _this.commentsMessage,\n      selectedComment: 0,\n      newComment: ''\n    }, \"commentsMessage\", _this.commentsMessage);\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"ShowDetails\",\n    value: function ShowDetails(item) {\n      this.setState({\n        selectedThumbnail: item.thumbnail,\n        selectedDescription: item.description,\n        commentsMessage: this.findComments(posts.id),\n        selectedComment: item.id\n      });\n    }\n  }, {\n    key: \"ShowDetails\",\n    value: function ShowDetails(item) {\n      return React.createElement(TargetDetails, {\n        thumbnail: item.thumbnail // description={this.props.post.selectedDescription} \n        // handleCommentSubmit = {this.handleCommentSubmit}\n        // newComment = {this.props.post.newComment}\n        // handleCommentSubmitChange = {this.handleCommentSubmitChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleCommentSubmitChange\",\n    value: function handleCommentSubmitChange(event) {\n      this.setState({\n        newComment: event.target.value\n      });\n    }\n  }, {\n    key: \"handleCommentSubmit\",\n    value: function handleCommentSubmit(event) {\n      var newComment = this.state.newComment;\n      alert('A name was submitted: ' + this.state.newComment);\n      event.preventDefault();\n      this.state.Data.push({\n        id: 3,\n        avatar: '100008343750912',\n        comment: newComment\n      });\n    }\n  }, {\n    key: \"DeletePost\",\n    value: function DeletePost(posts) {\n      console.log(this.state.Data);\n      var Post = Object.assign([], this.state.Data);\n      Post.splice(posts, 1);\n      this.setState({\n        Data: Post,\n        selectedThumbnail: this.state.Data[0].thumbnail,\n        selectedDescription: this.state.Data[0].description,\n        selectedComment: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var PostFeed = this.props.posts.map(function (item) {\n        return React.createElement(PostItem, {\n          deletePost: _this2.DeletePost.bind(_this2, item),\n          liked: item.liked,\n          key: item.id,\n          name: item.name,\n          avatar: item.avatar,\n          thumbnail: item.thumbnail,\n          gallery: item.gallery,\n          showDetails: _this2.ShowDetails.bind(_this2, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n      }); // const myComments = this.props.posts[0].comments.map(x => (\n      //     <Comment  \n      //     key={x.id}  \n      //     avatar={x.avatar} \n      //     comment={x.comment} />\n      // ));\n\n      return React.createElement(\"div\", {\n        className: \"Wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_2Col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TreeItem, {\n        img: \"100008343750912\",\n        name: \"Adam Donatelli (ME)\",\n        location: \"St. Petersburg\",\n        bornYear: \"1983\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(LeftNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(InfoCard, {\n        location: \"St. Petersburg\",\n        age: \"35\",\n        education: \"University of Arizona\",\n        bornIn: \"Hobbs,NM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Column2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeaderWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Pageheader, {\n        text: \"Adam Donatelli\",\n        icon: \"person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Grid_2Col_Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spacebetween\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        title: \"Add a post\",\n        className: \"btn-floating btn-small waves-effect waves-light grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"add\")))), PostFeed), React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.ShowDetails()))))));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nProfile.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Profile);","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/pages/profile/Home/index.js"],"names":["React","connect","fetchPosts","PropTypes","LeftNav","InfoCard","TreeItem","InfoCardSkills","PostItem","TargetDetails","Pageheader","Comment","EditableInput","Profile","state","posts","sideNavToggle","selectedThumbnail","selectedDescription","commentsMessage","selectedComment","newComment","props","item","setState","thumbnail","description","findComments","id","event","target","value","alert","preventDefault","Data","push","avatar","comment","console","log","Post","Object","assign","splice","PostFeed","map","DeletePost","bind","liked","name","gallery","ShowDetails","Component","propTypes","func","isRequired","array","mapStateToProps","items"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../../../actions/postActions';\nimport PropTypes from 'prop-types'; \nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\n\nimport InfoCardSkills from '../../../components/Infocard/skills';\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader'; \nimport Comment from '../../../components/comment/profile';\nimport EditableInput from '../../../components/common/editableInput';\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            posts: [],\n            sideNavToggle: false,\n            selectedThumbnail: this.selectedThumbnail,\n            selectedDescription: this.selectedDescription,\n            commentsMessage: this.commentsMessage,\n\n            selectedComment: 0,\n            newComment: '',\n            commentsMessage: this.commentsMessage,\n            // selectedThumbnail: this.selectedThumbnail,\n            // selectedDescription: this.selectedDescription,\n            // selectedComment: 0,\n        }\n        // this.state.selectedThumbnail = this.state.Data[0].thumbnail;\n        // this.state.selectedDescription = this.state.Data[0].description;\n        // this.handleCommentSubmitChange = this.handleCommentSubmitChange.bind(this);\n        // this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n    }\n\n    \n    componentWillMount() {\n        this.props.fetchPosts();\n    }\n\n\n     ShowDetails(item) {\n        this.setState({\n            selectedThumbnail: item.thumbnail,\n            selectedDescription: item.description,\n            commentsMessage: this.findComments(posts.id),\n            selectedComment: item.id\n        });\n     }\n\n     ShowDetails(item) {\n       return (\n        <TargetDetails \n        thumbnail={item.thumbnail} \n        // description={this.props.post.selectedDescription} \n        // handleCommentSubmit = {this.handleCommentSubmit}\n        // newComment = {this.props.post.newComment}\n        // handleCommentSubmitChange = {this.handleCommentSubmitChange}\n        />\n       )\n     }\n\n  \n\n    handleCommentSubmitChange(event) {\n        this.setState({newComment: event.target.value});\n        }\n    \n    handleCommentSubmit(event) {\n        const {newComment} = this.state;\n\n            alert('A name was submitted: ' + this.state.newComment);\n            event.preventDefault();\n\n            this.state.Data.push({\n                id: 3,\n                avatar: '100008343750912',\n                comment: newComment,\n            })\n    }  \n\n    \n    DeletePost(posts) {\n        console.log(this.state.Data);\n\n        const Post = Object.assign([], this.state.Data);\n        Post.splice(posts, 1)\n        this.setState({\n            Data : Post,\n            selectedThumbnail: this.state.Data[0].thumbnail,\n            selectedDescription: this.state.Data[0].description,\n            selectedComment: 0,\n           \n        })\n\n\n    }\n\n        render() {\n\n        \n\n        const PostFeed = this.props.posts.map(item => (\n            <PostItem deletePost={this.DeletePost.bind(this, item)} liked={item.liked} key={item.id} name={item.name} avatar={item.avatar} thumbnail={item.thumbnail} gallery={item.gallery} showDetails={this.ShowDetails.bind(this, item)} />\n        ));\n\n        // const myComments = this.props.posts[0].comments.map(x => (\n        //     <Comment  \n        //     key={x.id}  \n        //     avatar={x.avatar} \n        //     comment={x.comment} />\n        // ));\n\n\n      return (\n        <div className=\"Wrapper\"> \n\n        <div className=\"Grid_wrapper\">\n            <div className=\"Grid_2Col\">\n                <div className=\"Column1\">\n                    <TreeItem img=\"100008343750912\" name=\"Adam Donatelli (ME)\" location=\"St. Petersburg\" bornYear=\"1983\"/>\n                    <LeftNav/>\n                    <InfoCard location='St. Petersburg' age='35' education='University of Arizona' bornIn=\"Hobbs,NM\" />\n                </div>\n\n                <div className=\"Column2\"> \n                        <div className=\"HeaderWrapper\"> \n                            <Pageheader text=\"Adam Donatelli\" icon=\"person\" />\n                        </div>\n\n                        <div className=\"Grid_2Col_Container\"> \n                            <div className=\"Column\">\n                                <div className=\"spacebetween\">\n                                    <div>\n                                    </div>\n                                    <div>\n                                        <a title=\"Add a post\" className=\"btn-floating btn-small waves-effect waves-light grey\">\n                                        <i className=\"material-icons\">add</i>\n                                        </a>\n                                    </div>\n                                </div>\n                                {PostFeed}\n\n                            </div>\n\n                            <div className=\"Column\">\n\n                                {this.ShowDetails()}\n                                {/* <TargetDetails \n                                thumbnail={this.props.posts.thumbnail} \n                                description={this.props.post.selectedDescription} \n                                handleCommentSubmit = {this.handleCommentSubmit}\n                                newComment = {this.props.post.newComment}\n                                handleCommentSubmitChange = {this.handleCommentSubmitChange}\n                                /> */}\n                                {/* {myComments} */}\n                            </div>\n                        </div> \n                    </div> \n\n                </div>\n            </div>\n    </div>\n        );\n    }\n}\n\nProfile.propTypes = {\n    fetchPosts: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts.items,\n    // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n})\n\nexport default connect(mapStateToProps, {fetchPosts})(Profile)\n"]},"metadata":{},"sourceType":"module"}