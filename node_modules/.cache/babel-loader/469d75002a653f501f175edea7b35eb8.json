{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/pages/profile/Home/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts, showDetails } from '../../../actions/postActions';\nimport PropTypes from 'prop-types';\nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader';\nimport CommentFeed from '../../../components/comment/commentFeed';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this));\n    _this.state = {\n      // posts: [],\n      sideNavToggle: false,\n      selectedThumbnail: _this.selectedThumbnail,\n      selectedDescription: _this.selectedDescription,\n      commentsMessage: _this.commentsMessage,\n      selectedComment: 0,\n      newComment: '' // selectedThumbnail: this.selectedThumbnail,\n      // selectedDescription: this.selectedDescription,\n      // selectedComment: 0,\n      // this.state.selectedThumbnail = this.state.Data[0].thumbnail;\n      // this.state.selectedDescription = this.state.Data[0].description;\n      // this.handleCommentSubmitChange = this.handleCommentSubmitChange.bind(this);\n      // this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"handleCommentSubmitChange\",\n    value: function handleCommentSubmitChange(event) {\n      this.setState({\n        newComment: event.target.value\n      });\n    }\n  }, {\n    key: \"handleCommentSubmit\",\n    value: function handleCommentSubmit(event) {\n      var newComment = this.state.newComment;\n      alert('A name was submitted: ' + this.state.newComment);\n      event.preventDefault();\n      this.state.Data.push({\n        id: 3,\n        avatar: '100008343750912',\n        comment: newComment\n      });\n    }\n  }, {\n    key: \"DeletePost\",\n    value: function DeletePost(posts) {\n      console.log(this.state.Data);\n      var Post = Object.assign([], this.state.Data);\n      Post.splice(posts, 1);\n      this.setState({\n        Data: Post,\n        selectedThumbnail: this.state.Data[0].thumbnail,\n        selectedDescription: this.state.Data[0].description,\n        selectedComment: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          post = _this$props.post,\n          posts = _this$props.posts;\n      var firstPost = posts.slice(0, 1).map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(TargetDetails, {\n          thumbnail: item.thumbnail,\n          description: item.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), item.comments.map(function (step) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, step.text, \" \");\n        }));\n      }); // const selectedPost = () => {\n      //     return( <div>\n      //          <TargetDetails \n      //         thumbnail={post.thumbnail} \n      //         description={post.description} \n      //     />\n      //      {post.map((step) => {\n      //         return (\n      //             {step.comments.map(item) => {\n      //                 return (\n      //                     <div>{item.text} </div>\n      //                 )\n      //             }}\n      //         )                    \n      //     })}\n      //         </div>\n      //     )\n      // });\n\n      var selectedDetails = function selectedDetails() {\n        if (!post.name == '') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(TargetDetails, {\n            thumbnail: post.thumbnail,\n            description: post.description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }));\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \" \", firstPost);\n      };\n\n      var PostFeed = posts.map(function (item) {\n        return React.createElement(PostItem, {\n          commentItem: item.comments[0].text,\n          name: item.name,\n          avatar: item.avatar,\n          thumbnail: item.thumbnail,\n          gallery: item.gallery,\n          showDetails: function showDetails() {\n            return _this2.props.showDetails(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"Wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_2Col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(TreeItem, {\n        img: \"100008343750912\",\n        name: \"Adam Donatelli (ME)\",\n        location: \"St. Petersburg\",\n        bornYear: \"1983\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(LeftNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(InfoCard, {\n        location: \"St. Petersburg\",\n        age: \"35\",\n        education: \"University of Arizona\",\n        bornIn: \"Hobbs,NM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Column2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeaderWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Pageheader, {\n        text: \"Adam Donatelli\",\n        icon: \"person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Grid_2Col_Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spacebetween\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        title: \"Add a post\",\n        className: \"btn-floating btn-small waves-effect waves-light grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"add\")))), PostFeed), React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, selectedDetails()))))));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nProfile.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  post: PropTypes.object.isRequired,\n  //not sure i need this\n  showDetails: PropTypes.func.isRequired //not sure i need this\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items,\n    // showDetails: state.posts.item,\n    post: state.posts.item // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts,\n  showDetails: showDetails\n})(Profile);","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/pages/profile/Home/index.js"],"names":["React","connect","fetchPosts","showDetails","PropTypes","LeftNav","InfoCard","TreeItem","PostItem","TargetDetails","Pageheader","CommentFeed","Profile","state","sideNavToggle","selectedThumbnail","selectedDescription","commentsMessage","selectedComment","newComment","props","event","setState","target","value","alert","preventDefault","Data","push","id","avatar","comment","posts","console","log","Post","Object","assign","splice","thumbnail","description","post","firstPost","slice","map","item","comments","step","text","selectedDetails","name","PostFeed","gallery","Component","propTypes","func","isRequired","array","object","mapStateToProps","items"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts, showDetails } from '../../../actions/postActions';\nimport PropTypes from 'prop-types'; \nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\n\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader'; \nimport CommentFeed from '../../../components/comment/commentFeed';\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            // posts: [],\n            sideNavToggle: false,\n            selectedThumbnail: this.selectedThumbnail,\n            selectedDescription: this.selectedDescription,\n            commentsMessage: this.commentsMessage,\n\n            selectedComment: 0,\n            newComment: '',\n            // selectedThumbnail: this.selectedThumbnail,\n            // selectedDescription: this.selectedDescription,\n            // selectedComment: 0,\n        }\n        // this.state.selectedThumbnail = this.state.Data[0].thumbnail;\n        // this.state.selectedDescription = this.state.Data[0].description;\n        // this.handleCommentSubmitChange = this.handleCommentSubmitChange.bind(this);\n        // this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n    }\n\n    \n    componentWillMount() {\n        this.props.fetchPosts();\n\n    }\n\n\n  \n    \n\n    handleCommentSubmitChange(event) {\n        this.setState({newComment: event.target.value});\n        }\n    \n    handleCommentSubmit(event) {\n        const {newComment} = this.state;\n\n            alert('A name was submitted: ' + this.state.newComment);\n            event.preventDefault();\n\n            this.state.Data.push({\n                id: 3,\n                avatar: '100008343750912',\n                comment: newComment,\n            })\n    }  \n\n    \n    DeletePost(posts) {\n        console.log(this.state.Data);\n\n        const Post = Object.assign([], this.state.Data);\n        Post.splice(posts, 1)\n        this.setState({\n            Data : Post,\n            selectedThumbnail: this.state.Data[0].thumbnail,\n            selectedDescription: this.state.Data[0].description,\n            selectedComment: 0,\n           \n        })\n\n\n    }\n\n    \n \n\n    \n    \n\n        render() {\n            const { post, posts } = this.props;\n\n            const firstPost = posts.slice(0, 1).map((item) => {\n                return( <div>\n                     <TargetDetails \n                    thumbnail={item.thumbnail} \n                    description={item.description} \n                />\n\n                {item.comments.map((step) => {\n                    return (\n                            <div>{step.text} </div>\n                        )\n                            })}\n                    </div>\n                )\n            });\n\n\n            // const selectedPost = () => {\n            //     return( <div>\n            //          <TargetDetails \n            //         thumbnail={post.thumbnail} \n            //         description={post.description} \n            //     />\n            //      {post.map((step) => {\n            //         return (\n            //             {step.comments.map(item) => {\n            //                 return (\n            //                     <div>{item.text} </div>\n            //                 )\n            //             }}\n            //         )                    \n            //     })}\n            //         </div>\n            //     )\n            // });\n\n          \n        const selectedDetails = () => {\n                if (!post.name == '') {\n                    return  <div>\n\n                    <TargetDetails \n                    thumbnail={post.thumbnail} \n                    description={post.description} \n                    />\n\n                    </div>\n                   \n                  }\n                  return <div> {firstPost}</div>\n                }\n\n            \n        const PostFeed = posts.map(item => (\n            <PostItem \n            commentItem={item.comments[0].text} \n            name={item.name} \n            avatar={item.avatar} \n            thumbnail={item.thumbnail} \n            gallery={item.gallery} \n            showDetails={() => this.props.showDetails(item)}  />\n        ));\n\n\n        \n        \n\n      return (\n        <div className=\"Wrapper\"> \n\n        <div className=\"Grid_wrapper\">\n            <div className=\"Grid_2Col\">\n                <div className=\"Column1\">\n                    <TreeItem img=\"100008343750912\" name=\"Adam Donatelli (ME)\" location=\"St. Petersburg\" bornYear=\"1983\"/>\n                    <LeftNav/>\n                    <InfoCard location='St. Petersburg' age='35' education='University of Arizona' bornIn=\"Hobbs,NM\" />\n                </div>\n\n                <div className=\"Column2\"> \n                        <div className=\"HeaderWrapper\"> \n                            <Pageheader text=\"Adam Donatelli\" icon=\"person\" />\n                        </div>\n\n                        <div className=\"Grid_2Col_Container\"> \n                            <div className=\"Column\">\n                                <div className=\"spacebetween\">\n                                    <div>\n                                    </div>\n                                    <div>\n                                        <a title=\"Add a post\" className=\"btn-floating btn-small waves-effect waves-light grey\">\n                                        <i className=\"material-icons\">add</i>\n                                        </a>\n                                    </div>\n                                </div>\n                                {PostFeed}\n\n                            </div>\n\n                            <div className=\"Column\">\n\n                                \n                               {selectedDetails()}\n\n                                \n                            </div>\n                        </div> \n                    </div> \n\n                </div>\n            </div>\n    </div>\n        );\n    }\n}\n\nProfile.propTypes = {\n    fetchPosts: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired,\n\n    post: PropTypes.object.isRequired, //not sure i need this\n    showDetails: PropTypes.func.isRequired //not sure i need this\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts.items,\n    // showDetails: state.posts.item,\n    post: state.posts.item,\n    // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n})\n\nexport default connect(mapStateToProps, {fetchPosts, showDetails})(Profile)\n"]},"metadata":{},"sourceType":"module"}