{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/components/comment/profile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\nimport CommentItem from './commentItem';\n\nvar CommentFeed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentFeed, _Component);\n\n  function CommentFeed() {\n    _classCallCheck(this, CommentFeed);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CommentFeed).apply(this, arguments));\n  }\n\n  _createClass(CommentFeed, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          comments = _this$props.comments,\n          postId = _this$props.postId;\n      return comments.map(function (comment) {\n        return React.createElement(CommentItem, {\n          key: comment.id,\n          comment: comment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return CommentFeed;\n}(Component);\n\nCommentFeed.propTypes = {\n  comments: PropTypes.array.isRequired\n};\nexport default CommentFeed;","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/components/comment/profile.js"],"names":["React","Component","PropTypes","Avatar","CommentItem","CommentFeed","props","comments","postId","map","comment","id","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,W;;;;;;;;;;;;;6BACK;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,MADX,eACWA,MADX;AAGP,aAAOD,QAAQ,CAACE,GAAT,CAAa,UAAAC,OAAO;AAAA,eACvB,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,UAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,OAApB,CAAP;AAID;;;;EARuBT,S;;AAW1BI,WAAW,CAACO,SAAZ,GAAwB;AACtBL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,KAAV,CAAgBC;AADJ,CAAxB;AAIA,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\nimport CommentItem from './commentItem';\n\nclass CommentFeed extends Component {\n  render() {\n    const { comments, postId } = this.props;\n\n    return comments.map(comment => (\n        <CommentItem key={comment.id} comment={comment}  />\n\n    ));\n  }\n}\n\nCommentFeed.propTypes = {\n  comments: PropTypes.array.isRequired,\n};\n\nexport default CommentFeed;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}