{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/pages/profile/Home/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts, showDetails } from '../../../actions/postActions';\nimport PropTypes from 'prop-types';\nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader';\nimport CommentFeed from '../../../components/comment/commentFeed';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this));\n    _this.state = {\n      // posts: [],\n      sideNavToggle: false,\n      commentsMessage: _this.commentsMessage,\n      selectedComment: 0,\n      newComment: ''\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchPosts();\n    } // handleCommentSubmitChange(event) {\n    //     this.setState({newComment: event.target.value});\n    //     }\n    // handleCommentSubmit(event) {\n    //     const {newComment} = this.state;\n    //         alert('A name was submitted: ' + this.state.newComment);\n    //         event.preventDefault();\n    //         this.state.Data.push({\n    //             id: 3,\n    //             avatar: '100008343750912',\n    //             comment: newComment,\n    //         })\n    // }  \n    // DeletePost(posts) {\n    //     console.log(this.state.Data);\n    //     const Post = Object.assign([], this.state.Data);\n    //     Post.splice(posts, 1)\n    //     this.setState({\n    //         Data : Post,\n    //         selectedThumbnail: this.state.Data[0].thumbnail,\n    //         selectedDescription: this.state.Data[0].description,\n    //         selectedComment: 0,\n    //     })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          post = _this$props.post,\n          posts = _this$props.posts;\n      var PostFeed = posts.map(function (item) {\n        return React.createElement(PostItem // commentItem={item.comments[0].text} \n        , {\n          name: item.name,\n          avatar: item.avatar,\n          thumbnail: item.thumbnail,\n          gallery: item.gallery,\n          showDetails: function showDetails() {\n            return _this2.props.showDetails(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      });\n\n      var PostDetails = function PostDetails() {\n        if (!post.name == '') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(TargetDetails, {\n            thumbnail: post.thumbnail,\n            description: post.description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }), React.createElement(CommentFeed, {\n            postId: post._id,\n            comments: post.comments,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \" \", firstPost);\n      };\n\n      var firstPost = posts.slice(0, 1).map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(TargetDetails, {\n          thumbnail: item.thumbnail,\n          description: item.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(CommentFeed, {\n          postId: item._id,\n          comments: item.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"Wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Grid_2Col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(TreeItem, {\n        img: \"100008343750912\",\n        name: \"Adam Donatelli (ME)\",\n        location: \"St. Petersburg\",\n        bornYear: \"1983\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(LeftNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(InfoCard, {\n        location: \"St. Petersburg\",\n        age: \"35\",\n        education: \"University of Arizona\",\n        bornIn: \"Hobbs,NM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Column2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeaderWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Pageheader, {\n        text: \"Adam Donatelli\",\n        icon: \"person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Grid_2Col_Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spacebetween\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        title: \"Add a post\",\n        className: \"btn-floating btn-small waves-effect waves-light grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"add\")))), PostFeed), React.createElement(\"div\", {\n        className: \"Column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, PostDetails()))))));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nProfile.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  post: PropTypes.object.isRequired,\n  //not sure i need this\n  showDetails: PropTypes.func.isRequired //not sure i need this\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items,\n    // showDetails: state.posts.item,\n    post: state.posts.item // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts,\n  showDetails: showDetails\n})(Profile);","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/pages/profile/Home/index.js"],"names":["React","connect","fetchPosts","showDetails","PropTypes","LeftNav","InfoCard","TreeItem","PostItem","TargetDetails","Pageheader","CommentFeed","Profile","state","sideNavToggle","commentsMessage","selectedComment","newComment","props","post","posts","PostFeed","map","item","name","avatar","thumbnail","gallery","PostDetails","description","_id","comments","firstPost","slice","Component","propTypes","func","isRequired","array","object","mapStateToProps","items"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts, showDetails } from '../../../actions/postActions';\nimport PropTypes from 'prop-types'; \nimport LeftNav from '../../../components/LeftNav/profile';\nimport InfoCard from '../../../components/Infocard';\nimport TreeItem from '../../../components/TreeItem';\n\nimport PostItem from '../../../components/PostItem/profile';\nimport TargetDetails from '../../../components/TargetDetails/profile';\nimport Pageheader from '../../../components/PageHeader'; \nimport CommentFeed from '../../../components/comment/commentFeed';\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            // posts: [],\n            sideNavToggle: false,\n         \n            commentsMessage: this.commentsMessage,\n\n            selectedComment: 0,\n            newComment: '',\n    \n        }\n\n    }\n\n    \n    componentWillMount() {\n        this.props.fetchPosts();\n\n    }\n\n\n  \n    \n\n    // handleCommentSubmitChange(event) {\n    //     this.setState({newComment: event.target.value});\n    //     }\n    \n    // handleCommentSubmit(event) {\n    //     const {newComment} = this.state;\n\n    //         alert('A name was submitted: ' + this.state.newComment);\n    //         event.preventDefault();\n\n    //         this.state.Data.push({\n    //             id: 3,\n    //             avatar: '100008343750912',\n    //             comment: newComment,\n    //         })\n    // }  \n\n    \n    // DeletePost(posts) {\n    //     console.log(this.state.Data);\n\n    //     const Post = Object.assign([], this.state.Data);\n    //     Post.splice(posts, 1)\n    //     this.setState({\n    //         Data : Post,\n    //         selectedThumbnail: this.state.Data[0].thumbnail,\n    //         selectedDescription: this.state.Data[0].description,\n    //         selectedComment: 0,\n           \n    //     })\n\n\n    // }\n\n    \n \n        render() {\n            const { post, posts } = this.props;\n\n            const PostFeed = posts.map(item => (\n                <PostItem \n                // commentItem={item.comments[0].text} \n                name={item.name} \n                avatar={item.avatar} \n                thumbnail={item.thumbnail} \n                gallery={item.gallery} \n                showDetails={() => this.props.showDetails(item)}  />\n            ));\n\n\n            const PostDetails = () => {\n                if (!post.name == '') {\n                    return  <div> \n                         <TargetDetails  \n                         thumbnail={post.thumbnail} \n                         description={post.description}\n                         />\n                        <CommentFeed postId={post._id} comments={post.comments} />\n                        </div>\n                  }\n                  return <div> {firstPost}</div>\n                }\n\n                const firstPost = posts.slice(0, 1).map(item => (\n                    <div>\n                         <TargetDetails \n                        thumbnail={item.thumbnail} \n                        description={item.description} \n                        />\n    \n                        <CommentFeed postId={item._id} comments={item.comments} />\n                        </div>\n                ));\n            \n\n                \n        \n        \n\n      return (\n        <div className=\"Wrapper\"> \n\n        <div className=\"Grid_wrapper\">\n            <div className=\"Grid_2Col\">\n                <div className=\"Column1\">\n                    <TreeItem img=\"100008343750912\" name=\"Adam Donatelli (ME)\" location=\"St. Petersburg\" bornYear=\"1983\"/>\n                    <LeftNav/>\n                    <InfoCard location='St. Petersburg' age='35' education='University of Arizona' bornIn=\"Hobbs,NM\" />\n                </div>\n\n                <div className=\"Column2\"> \n                        <div className=\"HeaderWrapper\"> \n                            <Pageheader text=\"Adam Donatelli\" icon=\"person\" />\n                        </div>\n\n                        <div className=\"Grid_2Col_Container\"> \n                            <div className=\"Column\">\n                                <div className=\"spacebetween\">\n                                    <div>\n                                    </div>\n                                    <div>\n                                        <a title=\"Add a post\" className=\"btn-floating btn-small waves-effect waves-light grey\">\n                                        <i className=\"material-icons\">add</i>\n                                        </a>\n                                    </div>\n                                </div>\n                                {PostFeed}\n\n                            </div>\n\n                            <div className=\"Column\">\n\n                                \n                               {PostDetails()}\n\n\n                                \n                            </div>\n                        </div> \n                    </div> \n\n                </div>\n            </div>\n    </div>\n        );\n    }\n}\n\nProfile.propTypes = {\n    fetchPosts: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired,\n\n    post: PropTypes.object.isRequired, //not sure i need this\n    showDetails: PropTypes.func.isRequired //not sure i need this\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts.items,\n    // showDetails: state.posts.item,\n    post: state.posts.item,\n    // 'post' refurs to the post item in index.js within the reducers folder. \n    //'posts' can be named whatever, but this is what you are naming the prop to be used. 'posts' is used with this.props.posts.\n})\n\nexport default connect(mapStateToProps, {fetchPosts, showDetails})(Profile)\n"]},"metadata":{},"sourceType":"module"}